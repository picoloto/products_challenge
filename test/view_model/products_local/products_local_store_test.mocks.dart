// Mocks generated by Mockito 5.4.5 from annotations
// in products_challenge/test/view_model/products_local/products_local_store_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:products_challenge/model/product/product_model.dart' as _i6;
import 'package:products_challenge/service/product_local/product_local_service.dart'
    as _i3;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferencesAsync_0 extends _i1.SmartFake
    implements _i2.SharedPreferencesAsync {
  _FakeSharedPreferencesAsync_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductLocalService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductLocalService extends _i1.Mock
    implements _i3.ProductLocalService {
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  set path(String? _path) => super.noSuchMethod(
        Invocation.setter(
          #path,
          _path,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.SharedPreferencesAsync get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferencesAsync_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
        returnValueForMissingStub: _FakeSharedPreferencesAsync_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i2.SharedPreferencesAsync);

  @override
  set sharedPreferences(_i2.SharedPreferencesAsync? _sharedPreferences) =>
      super.noSuchMethod(
        Invocation.setter(
          #sharedPreferences,
          _sharedPreferences,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<List<_i6.Product>> findAllFavorites() => (super.noSuchMethod(
        Invocation.method(
          #findAllFavorites,
          [],
        ),
        returnValue: _i5.Future<List<_i6.Product>>.value(<_i6.Product>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Product>>.value(<_i6.Product>[]),
      ) as _i5.Future<List<_i6.Product>>);

  @override
  _i5.Future<List<_i6.Product>> toggleProductFavorite(_i6.Product? product) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleProductFavorite,
          [product],
        ),
        returnValue: _i5.Future<List<_i6.Product>>.value(<_i6.Product>[]),
        returnValueForMissingStub:
            _i5.Future<List<_i6.Product>>.value(<_i6.Product>[]),
      ) as _i5.Future<List<_i6.Product>>);
}
